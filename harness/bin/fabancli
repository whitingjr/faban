#!/bin/sh

BINDIR=`dirname $0`

if [ -n "$BINDIR" ]
then
   FABAN_HOME=`cd $BINDIR/.. > /dev/null 2>&1 && pwd`
    export FABAN_HOME
fi

# Allow JAVA_HOME env setting before starting...
if [ -z "$JAVA_HOME" ] ; then
    JAVA_HOME=/usr/java
    export JAVA_HOME
fi

JAVA="${JAVA_HOME}/bin/java"

if [ ! -x "$JAVA" ] ; then
    echo "Could not find java. Please set JAVA_HOME correctly." >&2
    exit 1
fi

CLASSPATH=""
for JAR in $FABAN_HOME/lib/*
do
    if [ -z "$CLASSPATH" ] ; then
        CLASSPATH="$JAR"
    else
        CLASSPATH="$CLASSPATH:$JAR"
    fi
done
export CLASSPATH

# Check whether the java -client option is supported on this JVM. If so, use
# the client JVM.  It is much lighter weight, less threads, less memory
# and we do not need much performance for the agent.
$JAVA -client -version >/dev/null 2>&1
if [ "$?" = "0" ] ; then
    JAVA="$JAVA -client"
fi

$JAVA -classpath $CLASSPATH -Dfaban.cli.command=$0 \
com.sun.faban.harness.util.CLI $*

ISSUED_PARAMETER="NONE"

# determine which command was used
for COMMAND in $*  ; do
	case $COMMAND in
	"pending" | "status" | "submit" | "kill" | "wait" | "showlogs" ) ISSUED_PARAMETER=$COMMAND ;;
#	*) echo "no command match for $COMMAND"
	esac
done

next=1
#work out the runId
for param do
	#echo "processing positional parameter $param"
	if [ 0 -eq $next ] ; then
		RUN_ID=$param
		break
	fi
	case $param in 
		"wait" ) next=0 ;;
	esac
done

#only notify for particular commands 
case $ISSUED_PARAMETER in
	"wait" )  notify-send "Faban" "Run $RUN_ID has completed." --urgency=normal --expire-time=360000 ;;
# add more notifications if wanted here
#	*) echo "no notification" ;;	
esac

